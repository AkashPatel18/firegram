{"version":3,"sources":["components/title.js","firebase/config.js","hook/useStorage.js","components/progress.js","components/upload.js","hook/useFirestore.js","components/imagegrid.js","components/modal.js","App.js","index.js"],"names":["Title","className","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFireStore","firestore","timeStamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","console","log","style","width","UploadForm","types","type","onChange","e","selectedFile","target","files","includes","hidden","useFireStore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelected","map","onClick","src","alt","Modal","selected","setselected","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89ce7eca.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Title = () => {\r\n    return (<>\r\n        <h1 className=\"title-h1\">FireGram </h1>\r\n        <h2 className=\"title-h2\">Your Pictures</h2>\r\n        <p>Create Your Memories With FireGram</p>\r\n    </>)\r\n}\r\n\r\nexport default Title"," import firebase from 'firebase/app'\r\n\r\n import 'firebase/storage'\r\n import 'firebase/firestore'\r\n \r\n var firebaseConfig = {\r\n    apiKey: \"AIzaSyA7n_hzRt6cOjr0F41W3H4m6tkIaT0S4fM\",\r\n    authDomain: \"firegram-e191e.firebaseapp.com\",\r\n    projectId: \"firegram-e191e\",\r\n    storageBucket: \"firegram-e191e.appspot.com\",\r\n    messagingSenderId: \"386586940883\",\r\n    appId: \"1:386586940883:web:fec4d261fba6e2e563cb26\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const projectStorage = firebase.storage()\r\n\r\n  const projectFireStore = firebase.firestore() \r\n\r\n  const timeStamp = firebase.firestore.FieldValue.serverTimestamp\r\n\r\n  export  {projectStorage,projectFireStore , timeStamp}","import { useState , useEffect } from 'react'\r\nimport { projectStorage, projectFireStore , timeStamp  } from '../firebase/config'\r\n\r\nconst useStorage = (file) => {\r\n    const [progress,setProgress] = useState(0)\r\n    const [error , setError] = useState(null)\r\n    const [url,setUrl] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const storageRef = projectStorage.ref(file.name)\r\n        const collectionRef = projectFireStore.collection('images')\r\n\r\n        storageRef.put(file).on('state_changed',(snap) => {\r\n            let percentage = (snap.bytesTransferred/snap.totalBytes)*100\r\n            setProgress(percentage);\r\n        }, (err) => {\r\n            setError(err);\r\n        },async () => {\r\n            const url = await storageRef.getDownloadURL()\r\n            const createdAt = timeStamp()\r\n            collectionRef.add({ url , createdAt })\r\n            setUrl(url)\r\n        })\r\n\r\n    },[file])\r\n\r\n    return {progress,url,error}\r\n}\r\n\r\n\r\n\r\nexport default useStorage","import useStorage from '../hook/useStorage'\r\nimport { useEffect } from 'react'\r\n\r\nconst ProgressBar = ({ file,setFile}) => {\r\n\r\n    const {url ,progress} = useStorage(file) \r\n\r\n    useEffect(() => {\r\n        \r\n        if (url) {\r\n           setFile(null) \r\n        }\r\n        \r\n    }, [url])\r\n\r\n    console.log(progress,url);\r\n    return(\r\n        <div className=\"progress-bar\" style={{ width: progress + '%' }}></div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar","import React,{ useState } from 'react'\r\nimport ProgressBar from './progress'\r\n\r\n\r\nconst UploadForm = () => {\r\n\r\n    const [file,setFile] = useState(null)\r\n\r\n    const [error,setError] = useState(\"\")\r\n\r\n    const types = ['image/png','image/jpeg']\r\n\r\n    const changeHandler = (e) => {\r\n        let selectedFile = e.target.files[0]\r\n\r\n        if (selectedFile && types.includes(selectedFile.type)){\r\n            setFile(selectedFile)\r\n        } else{\r\n            setFile(null)\r\n            setError(\"Please select an image file (jpeg or png)\")\r\n\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        <form>\r\n            <input type=\"file\" onChange={changeHandler} className=\"file_input\" hidden></input>\r\n            <div className=\"output\">\r\n                { error && <div className=\"error\">{ error }</div>}\r\n                { file && <div className=\"error\">{ file.name }</div>}\r\n                { file && <ProgressBar file ={file} setFile={setFile}/>}\r\n\r\n            </div>\r\n        </form>\r\n        \r\n    </>)\r\n}\r\nexport default UploadForm","import { useState , useEffect } from 'react'\r\nimport { projectFireStore } from '../firebase/config'\r\n\r\nconst useFireStore = (collection) => {\r\n    const [docs,setDocs] = useState([])\r\n\r\n    useEffect (() => {\r\n      const unsub =   projectFireStore.collection(collection)\r\n        .orderBy('createdAt','desc')\r\n        .onSnapshot((snap) => {\r\n            \r\n            let documents = []\r\n            snap.forEach(doc => {\r\n                documents.push({ ...doc.data(), id:doc.id})\r\n            })\r\n            setDocs(documents)\r\n        })\r\n\r\n        return () => unsub()\r\n    },[collection])\r\n\r\n    return {docs}\r\n}\r\n\r\nexport default useFireStore","import React from 'react'\r\nimport useFireStore from '../hook/useFirestore'\r\n\r\nconst ImageGrid = ({setSelected}) => {\r\n\r\n    let {docs} = useFireStore('images')\r\n\r\n    // let docsUrl = useFireStore(docs)\r\n    \r\n\r\n   \r\n    \r\n\r\n    return(\r\n        <div className=\"img_grid\">\r\n        { docs && docs.map(doc => (\r\n            <div className=\"img-wrap\" key={doc.id}\r\n            onClick = {() => setSelected(doc.url)}\r\n            >\r\n                <img src={doc.url} alt=\"\"></img>     \r\n            </div>\r\n        ))\r\n        }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageGrid","import React from 'react'\r\n\r\nconst Modal = ({selected,setselected}) => {\r\n    console.log(selected);\r\n    const handleClick = (e) => {\r\n        setselected(null)\r\n    }\r\n    return(\r\n    <div className=\"backdrop\" onClick={handleClick}>\r\n        <img src={selected} alt=\"\"></img>\r\n    </div>\r\n    )\r\n\r\n}\r\nexport default Modal","import Title from './components/title'\nimport UploadForm from './components/upload'\nimport ImageGrid from './components/imagegrid'\nimport Modal from './components/modal'\nimport { useState } from 'react'\n\nconst App = () => {\n\n  const [selected,setSelected] = useState(null)\n\n  return(<>\n  <div className=\"App\">\n    <Title/>\n    <UploadForm />\n    <ImageGrid setSelected={setSelected}/>\n   {  selected && <Modal selected={selected} setselected={setSelected}/>}\n  </div>\n\n  </>)\n\n}\n\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}